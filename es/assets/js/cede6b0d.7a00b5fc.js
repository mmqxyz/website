"use strict";(self.webpackChunk_semaphore_protocol_website=self.webpackChunk_semaphore_protocol_website||[]).push([[6436],{3905:function(e,r,a){a.d(r,{Zo:function(){return m},kt:function(){return g}});var o=a(7294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function t(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?t(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function p(e,r){if(null==e)return{};var a,o,n=function(e,r){if(null==e)return{};var a,o,n={},t=Object.keys(e);for(o=0;o<t.length;o++)a=t[o],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)a=t[o],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=o.createContext({}),s=function(e){var r=o.useContext(l),a=r;return e&&(a="function"==typeof e?e(r):i(i({},r),e)),a},m=function(e){var r=s(e.components);return o.createElement(l.Provider,{value:r},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},d=o.forwardRef((function(e,r){var a=e.components,n=e.mdxType,t=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=s(a),d=n,g=u["".concat(l,".").concat(d)]||u[d]||c[d]||t;return a?o.createElement(g,i(i({ref:r},m),{},{components:a})):o.createElement(g,i({ref:r},m))}));function g(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var t=a.length,i=new Array(t);i[0]=d;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[u]="string"==typeof e?e:n,i[1]=p;for(var s=2;s<t;s++)i[s]=a[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9233:function(e,r,a){a.r(r),a.d(r,{assets:function(){return l},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return t},metadata:function(){return p},toc:function(){return s}});var o=a(3117),n=(a(7294),a(3905));const t={sidebar_position:2,title:"Grupos"},i="Gupos Semaphore",p={unversionedId:"guides/groups",id:"version-V3/guides/groups",title:"Grupos",description:"Un grupo Semaphore contiene los identity commitments (compromisos de identidad) de miembros del grupo.",source:"@site/i18n/es/docusaurus-plugin-content-docs/version-V3/guides/groups.md",sourceDirName:"guides",slug:"/guides/groups",permalink:"/es/docs/guides/groups",draft:!1,editUrl:"https://github.com/semaphore-protocol/website/edit/main/versioned_docs/version-V3/guides/groups.md",tags:[],version:"V3",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Grupos"},sidebar:"version-V3/mySidebar",previous:{title:"Identidades",permalink:"/es/docs/guides/identities"},next:{title:"Pruebas",permalink:"/es/docs/guides/proofs"}},l={},s=[{value:"Grupos off-chain (externos a la cadena)",id:"grupos-off-chain-externos-a-la-cadena",level:2},{value:"Crear un grupo",id:"crear-un-grupo",level:3},{value:"A\xf1adir miembros",id:"a\xf1adir-miembros",level:3},{value:"Remover o actualizar miembros",id:"remover-o-actualizar-miembros",level:3},{value:"Grupos on-chain",id:"grupos-on-chain",level:2}],m={toc:s};function u(e){let{components:r,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},m,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"gupos-semaphore"},"Gupos Semaphore"),(0,n.kt)("p",null,"Un ",(0,n.kt)("a",{parentName:"p",href:"/docs/glossary/#semaphore-group"},"grupo Semaphore")," contiene los ",(0,n.kt)("a",{parentName:"p",href:"/docs/glossary/#identity-commitment"},"identity commitments")," (compromisos de identidad) de miembros del grupo.\nEstos son algunos ejemplos de uso de los grupos:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Encuesta con preguntas a la que se unen las personas que acudieron a un evento para calificarlo,"),(0,n.kt)("li",{parentName:"ul"},"votaci\xf3n a la que se unen los miembros para votar por una propuesta,"),(0,n.kt)("li",{parentName:"ul"},"Denunciantes que est\xe1n verificados como empleados de una organizaci\xf3n.")),(0,n.kt)("p",null,"Un grupo Semaphore es un ",(0,n.kt)("a",{parentName:"p",href:"/docs/glossary/#incremental-merkle-tree"},"\xe1rbol de Merkle incremental"),", y los miembros del grupo (por ejemplo, ",(0,n.kt)("a",{parentName:"p",href:"/docs/glossary/#identity-commitments"},"identity commitments"),") son las hojas del \xe1rbol.\nLos grupos Semaphore determinan los siguientes dos par\xe1metro:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Group id"),": un identificador \xfanico para el grupo;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Tree depth"),": el n\xfamero m\xe1ximo de miembros que puede contener un grupo (",(0,n.kt)("inlineCode",{parentName:"li"},"max size = 2 ^ tree depth"),").")),(0,n.kt)("p",null,"Aprenda c\xf3mo trabajar con grupos."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#off-chain-groups"},(0,n.kt)("strong",{parentName:"a"},"Grupos off-chain"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#on-chain-groups"},(0,n.kt)("strong",{parentName:"a"},"Grupos on-chain")))),(0,n.kt)("h2",{id:"grupos-off-chain-externos-a-la-cadena"},"Grupos off-chain (externos a la cadena)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-group"},"Crear un grupo")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#add-members"},"A\xf1adir miembros")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#remove-or-update-members"},"Remover o actualizar miembros"))),(0,n.kt)("h3",{id:"crear-un-grupo"},"Crear un grupo"),(0,n.kt)("p",null,"Utilice la clase ",(0,n.kt)("inlineCode",{parentName:"p"},"Group")," de la librer\xeda ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/group"},(0,n.kt)("inlineCode",{parentName:"a"},"@semaphore-protocol/group"))," para crear un grupo off-chain con los siguientes par\xe1metros:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Group id"),": un identificar \xfanico para el grupo;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Tree depth"),": (",(0,n.kt)("em",{parentName:"li"},"default ",(0,n.kt)("inlineCode",{parentName:"em"},"20")),") el n\xfamero m\xe1ximo de usuarios que puede contener un grupo, el valor por defecto es 20 (",(0,n.kt)("inlineCode",{parentName:"li"},"max size = 2 ^ tree depth"),").")),(0,n.kt)("p",null,"Para crear un grupo con el n\xfamero de usuarios que aparece por defecto (20) ",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"em"},"treeDepth")),", llame la funci\xf3n para construir un ",(0,n.kt)("inlineCode",{parentName:"p"},"Group")," sin el segundo par\xe1metro. Por ejemplo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { Group } from "@semaphore-protocol/group"\n\nconst group = new Group(1)\n')),(0,n.kt)("p",null,"El siguiente c\xf3digo de ejemplo pasa por ",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"em"},"treeDepth"))," para crear un grupo para ",(0,n.kt)("inlineCode",{parentName:"p"},"2 ^ 30 = 1073741824")," miembros:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { Group } from "@semaphore-protocol/group"\n\nconst group = new Group(1, 30)\n')),(0,n.kt)("h3",{id:"a\xf1adir-miembros"},"A\xf1adir miembros"),(0,n.kt)("p",null,"Utiliza la funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},"Group addMember"),' para a\xf1adir un miembro (es decir su "identity commitment") a un grupo. Por ejemplo:'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"group.addMember(identityCommitment)\n")),(0,n.kt)("p",null,"Para a\xf1adir un lote de miembros a un grupo, pasa una selecci\xf3n por la funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},"Group addMembers"),". Por ejemplo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"group.addMembers([identityCommitment1, identityCommitment2])\n")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Cuando utiliza la misma identidad Semaphore en varios grupos, si un atacante toma control de esa identidad, todos los grupos de los que forma parte estar\xe1n comprometidos. Considere utilizar identidades diferentes para cada grupo.")),(0,n.kt)("h3",{id:"remover-o-actualizar-miembros"},"Remover o actualizar miembros"),(0,n.kt)("p",null,"Para remover miembros de un equipo, pasa el \xedndice del miembro por la funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},"Group removeMember"),". Por ejemplo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"group.removeMember(0)\n")),(0,n.kt)("p",null,"Para actualizar los miembros dentro de un grupo, pasa el \xedndice del miembro y el nuevo valor por la funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},"Group updateMember"),". Por ejemplo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"group.updateMember(0, 2)\n")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Remover a un miembro de un grupo configura el valor del nodo a un valor especial (ejemplo, ",(0,n.kt)("inlineCode",{parentName:"p"},"zeroValue"),").\nDado que ese nodo no se remueve y el largo de la selecci\xf3n de ",(0,n.kt)("inlineCode",{parentName:"p"},"group.members")," no cambia.")),(0,n.kt)("h2",{id:"grupos-on-chain"},"Grupos on-chain"),(0,n.kt)("p",null,"El contrato ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/contracts/contracts/base/SemaphoreGroups.sol"},(0,n.kt)("inlineCode",{parentName:"a"},"SemaphoreGroups"))," utiliza la librer\xeda del ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/privacy-scaling-explorations/zk-kit/blob/main/packages/incremental-merkle-tree.sol/contracts/IncrementalBinaryTree.sol"},(0,n.kt)("inlineCode",{parentName:"a"},"IncrementalBinaryTree"))," (\xe1rbol binario incremental) y provee m\xe9todos para crear y administrar grupos."),(0,n.kt)("admonition",{title:"rmaci\xf3n",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"puede importar el contrato ",(0,n.kt)("inlineCode",{parentName:"p"},"SemaphoreGroups.sol")," y otros contratos Semaphore del m\xf3dulo NPM ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/main/packages/contracts"},(0,n.kt)("inlineCode",{parentName:"a"},"@semaphore-protocol/contracts")),".")),(0,n.kt)("p",null,"Alternativamente, puede utilizar un contrato ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/blob/main/packages/contracts/contracts/Semaphore.sol"},(0,n.kt)("inlineCode",{parentName:"a"},"Semaphore.sol"))," ya desplegado y utilizar sus funciones externas para grupos."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"Semaphore.sol")," no revisa si un miembro con un identity commitment en espec\xedfico ya existe en un grupo. Esta revisi\xf3n se debe realizar off-chain.")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"Semaphore.sol")," incluye un mecanismo para verificar pruebas Semaphore creadas con ra\xedces de \xe1rboles de Merkle antiguas. La duraci\xf3n de este mecanismo puede ser definido por el admin en la funci\xf3n ",(0,n.kt)("inlineCode",{parentName:"p"},"createGroup"),". Por lo tanto, los miembros de un grupo pueden continuar generando pruebas v\xe1lidas incluso despu\xe9s de ser removidos. Para m\xe1s informaci\xf3n ver el issue ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/issues/98"},"#98"),".")))}u.isMDXComponent=!0}}]);