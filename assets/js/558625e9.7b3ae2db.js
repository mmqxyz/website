"use strict";(self.webpackChunk_semaphore_protocol_website=self.webpackChunk_semaphore_protocol_website||[]).push([[4346],{3905:function(e,t,a){a.d(t,{Zo:function(){return i},kt:function(){return k}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},i=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),c=u(a),d=r,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return a?n.createElement(k,o(o({ref:t},i),{},{components:a})):n.createElement(k,o({ref:t},i))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[c]="string"==typeof e?e:r,o[1]=p;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},546:function(e,t,a){a.r(t),a.d(t,{assets:function(){return f},contentTitle:function(){return b},default:function(){return w},frontMatter:function(){return h},metadata:function(){return v},toc:function(){return N}});var n=a(3117),r=a(7294),l=a(3905),o=a(6010),p=a(2389),s=a(7392),u=a(7094),i=a(2466),c="tabList__CuJ",m="tabItem_LNqP";function d(e){const{lazy:t,block:a,defaultValue:l,values:p,groupId:d,className:k}=e,y=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=p??y.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),h=(0,s.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===l?l:l??y.find((e=>e.props.default))?.props.value??y[0].props.value;if(null!==b&&!g.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:f}=(0,u.U)(),[N,T]=(0,r.useState)(b),w=[],{blockElementScrollPositionUntilNextRender:x}=(0,i.o5)();if(null!=d){const e=v[d];null!=e&&e!==N&&g.some((t=>t.value===e))&&T(e)}const I=e=>{const t=e.currentTarget,a=w.indexOf(t),n=g[a].value;n!==N&&(x(t),T(n),null!=d&&f(d,String(n)))},O=e=>{let t=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]??w[w.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},k)},g.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>w.push(e),onKeyDown:O,onClick:I},l,{className:(0,o.Z)("tabs__item",m,l?.className,{"tabs__item--active":N===t})}),a??t)}))),t?(0,r.cloneElement)(y.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function k(e){const t=(0,p.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}var y="tabItem_Ymn6";function g(e){let{children:t,hidden:a,className:n}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(y,n),hidden:a},t)}const h={sidebar_position:2},b="Quick setup",v={unversionedId:"quick-setup",id:"version-V3/quick-setup",title:"Quick setup",description:"Semaphore provides an official CLI to set up your project with Hardhat. If your NPM version is 5.2 or higher you can use NPX:",source:"@site/versioned_docs/version-V3/quick-setup.mdx",sourceDirName:".",slug:"/quick-setup",permalink:"/docs/quick-setup",draft:!1,editUrl:"https://github.com/semaphore-protocol/website/edit/main/versioned_docs/version-V3/quick-setup.mdx",tags:[],version:"V3",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"version-V3/mySidebar",previous:{title:"What Is Semaphore?",permalink:"/docs/introduction"},next:{title:"Identities",permalink:"/docs/guides/identities"}},f={},N=[{value:"Output",id:"output",level:2},{value:"Usage",id:"usage",level:2},{value:"Compile",id:"compile",level:3},{value:"Test",id:"test",level:3},{value:"Deploy",id:"deploy",level:3}],T={toc:N};function w(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},T,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"quick-setup"},"Quick setup"),(0,l.kt)("p",null,"Semaphore provides an official CLI to set up your project with Hardhat. If your NPM version is 5.2 or higher you can use NPX:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx @semaphore-protocol/cli@latest create my-app\n")),(0,l.kt)("p",null,"Otherwise, install ",(0,l.kt)("inlineCode",{parentName:"p"},"@semaphore-protocol/cli")," globally and run the ",(0,l.kt)("inlineCode",{parentName:"p"},"create")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -g @semaphore-protocol/cli@latest\nsemaphore create my-app\n")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/semaphore-protocol/semaphore/tree/main/packages/cli"},(0,l.kt)("inlineCode",{parentName:"a"},"semaphore CLI"))," can also be used to get group data from a supported network (e.g ",(0,l.kt)("inlineCode",{parentName:"p"},"semaphore get-groups --network goerli"),").")),(0,l.kt)("p",null,"To start working on your project, install the dependencies:"),(0,l.kt)(k,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(g,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd my-app\nnpm i\n"))),(0,l.kt)(g,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd my-app\nyarn\n")))),(0,l.kt)("h2",{id:"output"},"Output"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"create")," command will create a directory called my-app (or whatever name you choose) inside the current folder. That directory will contain the initial project structure, which includes a simple contract, a task to deploy that contract and some tests."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"my-app\n\u251c\u2500\u2500 contracts\n\u2502\xa0\xa0 \u2514\u2500\u2500 Greeter.sol\n\u251c\u2500\u2500 .env.example\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 hardhat.config.ts\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 tasks\n\u2502\xa0\xa0 \u2514\u2500\u2500 deploy.ts\n\u251c\u2500\u2500 test\n\u2502\xa0\xa0 \u2514\u2500\u2500 Greeter.ts\n\u2514\u2500\u2500 tsconfig.json\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Greeter.sol")," contract creates a Semaphore group, allows users to join that group with their Semaphore identity, and finally allows group members to send an anonymous greeting."),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("h3",{id:"compile"},"Compile"),(0,l.kt)("p",null,"Compile your contracts by running:"),(0,l.kt)(k,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(g,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm run compile\n"))),(0,l.kt)(g,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn compile\n")))),(0,l.kt)("h3",{id:"test"},"Test"),(0,l.kt)("p",null,"Test your contracts by running:"),(0,l.kt)(k,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(g,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm test\n"))),(0,l.kt)(g,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn test\n")))),(0,l.kt)("p",null,"You can also generate a test coverage report:"),(0,l.kt)(k,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(g,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm run test:coverage\n"))),(0,l.kt)(g,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn test:coverage\n")))),(0,l.kt)("p",null,"Or a test gas report:"),(0,l.kt)(k,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(g,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm run test:report-gas\n"))),(0,l.kt)(g,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn test:report-gas\n")))),(0,l.kt)("h3",{id:"deploy"},"Deploy"),(0,l.kt)("p",null,"Follow the instructions below to deploy your contracts:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Copy the ",(0,l.kt)("inlineCode",{parentName:"p"},".env.example")," file as ",(0,l.kt)("inlineCode",{parentName:"p"},".env"),"."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cp .env.example .env\n"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Add your environment variables."),(0,l.kt)("admonition",{parentName:"li",type:"note"},(0,l.kt)("p",{parentName:"admonition"},"You should at least set a valid Ethereum URL (e.g. Infura) and a private key with some ethers."))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"And deploy your contract."),(0,l.kt)(k,{defaultValue:"npm",groupId:"package-managers",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(g,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm run deploy -- --semaphore <semaphore-address> --group <group-id> --network goerli\n"))),(0,l.kt)(g,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn deploy --semaphore <semaphore-address> --group <group-id> --network goerli\n")))),(0,l.kt)("admonition",{parentName:"li",type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Check the Semaphore contract addresses ",(0,l.kt)("a",{parentName:"p",href:"/docs/deployed-contracts"},"here"),".")),(0,l.kt)("admonition",{parentName:"li",type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"The group id is a number.")))))}w.isMDXComponent=!0}}]);